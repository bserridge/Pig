import React, { useState } from 'react';
import { StyleSheet, Text, View, TouchableOpacity, SafeAreaView } from 'react-native';

export default function App() {
  const [currentScore, setCurrentScore] = useState(0);
  const [totalScore, setTotalScore] = useState(0);
  const [diceValue, setDiceValue] = useState(null);
  const [gameOver, setGameOver] = useState(false);

  const rollDice = () => {
    const newDiceValue = Math.floor(Math.random() * 6) + 1;
    setDiceValue(newDiceValue);

    if (newDiceValue === 1) {
      // Player rolled a 1, lose turn and current score
      setCurrentScore(0);
    } else {
      // Add to current score
      const newCurrentScore = currentScore + newDiceValue;
      setCurrentScore(newCurrentScore);
    }
  };

  const hold = () => {
    const newTotalScore = totalScore + currentScore;
    setTotalScore(newTotalScore);
    setCurrentScore(0);
    
    if (newTotalScore >= 100) {
      setGameOver(true);
    }
  };

  const newGame = () => {
    setCurrentScore(0);
    setTotalScore(0);
    setDiceValue(null);
    setGameOver(false);
  };

  return (
    <SafeAreaView style={styles.container}>
      <Text style={styles.title}>Pig Dice Game</Text>
      
      <View style={styles.scoreContainer}>
        <Text style={styles.score}>Total Score: {totalScore}</Text>
        <Text style={styles.score}>Current Score: {currentScore}</Text>
      </View>

      <View style={styles.diceContainer}>
        <Text style={styles.dice}>{diceValue || '?'}</Text>
      </View>

      {!gameOver ? (
        <View style={styles.buttonContainer}>
          <TouchableOpacity style={styles.button} onPress={rollDice}>
            <Text style={styles.buttonText}>Roll Dice</Text>
          </TouchableOpacity>
          
          <TouchableOpacity style={styles.button} onPress={hold}>
            <Text style={styles.buttonText}>Hold</Text>
          </TouchableOpacity>
        </View>
      ) : (
        <View style={styles.gameOverContainer}>
          <Text style={styles.gameOverText}>You Won! ðŸŽ‰</Text>
          <TouchableOpacity style={styles.button} onPress={newGame}>
            <Text style={styles.buttonText}>Play Again</Text>
          </TouchableOpacity>
        </View>
      )}
    </SafeAreaView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#fff',
    alignItems: 'center',
    justifyContent: 'center',
  },
  title: {
    fontSize: 32,
    fontWeight: 'bold',
    marginBottom: 40,
  },
  scoreContainer: {
    marginBottom: 30,
  },
  score: {
    fontSize: 24,
    marginVertical: 5,
  },
  diceContainer: {
    width: 100,
    height: 100,
    borderWidth: 2,
    borderRadius: 10,
    justifyContent: 'center',
    alignItems: 'center',
    marginBottom: 30,
  },
  dice: {
    fontSize: 48,
  },
  buttonContainer: {
    flexDirection: 'row',
    justifyContent: 'space-around',
    width: '80%',
  },
  button: {
    backgroundColor: '#4CAF50',
    padding: 15,
    borderRadius: 8,
    minWidth: 120,
    alignItems: 'center',
  },
  buttonText: {
    color: 'white',
    fontSize: 18,
    fontWeight: 'bold',
  },
  gameOverContainer: {
    alignItems: 'center',
  },
  gameOverText: {
    fontSize: 32,
    fontWeight: 'bold',
    marginBottom: 20,
    color: '#4CAF50',
  },
});